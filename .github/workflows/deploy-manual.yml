name: Deploy manually

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to send traffic to
        options:
          - production
          - sandbox
      color:
        type: choice
        description: Environment to send traffic to
        default: green
        options:
          - blue
          - green
      blowup:
        type: boolean
        description: Blow up the build
        default: false
      notify:
        type: boolean
        description: Notify the team
        default: false

jobs:
  before:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.notify == 'true' }}
    steps:
      - name: (debug)
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.ref_type: ${{ github.ref_type }}"
          echo "github.ref: ${{ github.ref }}"
          echo "toJSON(github.event.inputs): ${{ toJSON(github.event.inputs) }}"
          echo "toJSON(inputs): ${{ toJSON(inputs) }}"

  deploy:
    runs-on: ubuntu-latest
    needs: [before]
    strategy:
      matrix:
        color: [blue, green]
    if: always()
    steps:
      - name: (debug)
        run: |
          echo "github.event_name: ${{ github.event_name }}"
          echo "github.head_ref: ${{ github.head_ref }}"
          echo "github.ref_name: ${{ github.ref_name }}"
          echo "github.ref_type: ${{ github.ref_type }}"
          echo "github.ref: ${{ github.ref }}"
          echo "toJSON(github.event.inputs): ${{ toJSON(github.event.inputs) }}"
          echo "toJSON(inputs): ${{ toJSON(inputs) }}"

      - run: |
          echo "Running ${{ github.event.inputs.environment }} with color ${{ github.event.inputs.color }}"

      - run: echo "color is - ${{ matrix.color }}"

      - name: foobar
        id: test
        if: github.event.inputs.blowup == 'true'
        run: exit 1

      - name: (debug) always()
        if: always()
        run: echo "running always"

      - name: (debug) failure()
        if: failure()
        run: echo "running failure"

      - name: (debug) success()
        if: success()
        run: echo "running success"

  after:
    needs: [deploy]
    if: ${{ !cancelled() && github.event.inputs.notify == 'true'}}
    runs-on: ubuntu-latest
    steps:
      - name: success
        if: ${{ !contains(join(needs.*.result, ','), 'failure') }}
        run: echo "success"

      - name: failure
        if: ${{ contains(join(needs.*.result, ','), 'failure') }}
        run: echo "failure"

      - name: cancelled
        if: ${{ cancelled() }}
        run: echo "cancelled"

      - name: conditional failure or success
        run: echo "text that is conditional ${{ contains(join(needs.*.result, ','), 'failure') && 'failure' || 'success' }}"
