name: Deploy manually

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Environment to send traffic to
        options:
          - production
          - sandbox
      color:
        type: choice
        description: Environment to send traffic to
        default: green
        options:
          - blue
          - green
      blowup:
        type: boolean
        description: Blow up the build
        default: false

jobs:
  get-version:
    runs-on: ubuntu-latest
    steps:
      - name: (debug) github.ref
        run: echo "${{ toJSON(github.ref) }}"
      - name: (debug) github.head_ref
        run: echo "${{ toJSON(github.head_ref) }}"
      - name: (debug) github.ref_name
        run: echo "${{ github.ref_name }}"
      - name: (debug) github.event_name
        run: echo "${{ github.event_name }}"
      - name: (debug) github.ref_type
        run: echo "${{ toJSON(github.ref_type) }}"
      - name: (debug) github.event.inputs
        run: echo "${{ toJSON(github.event.inputs) }}"
      - name: (debug) inputs
        run: echo "${{ toJSON(inputs) }}"

  deploy-production:
    runs-on: ubuntu-latest
    needs: [get-version]
    if: github.event.inputs.environment == 'production'
    steps:
      - run: |
          echo "Running production with color ${{ github.event.inputs.color }}"

  deploy-sandbox:
    runs-on: ubuntu-latest
    needs: [get-version]
    strategy:
      matrix:
        color: [blue, green]
    if: github.event.inputs.environment == 'sandbox'
    steps:
      - run: |
          echo "Running sandbox with color ${{ github.event.inputs.color }}"

      - run: echo "color is - ${{ matrix.color }}"

      - name: foobar
        id: test
        if: github.event.inputs.blowup == 'true'
        run: exit 1

      - name: (debug) always()
        if: always()
        run: echo "running always"

      - name: (debug) failure()
        if: failure()
        run: echo "running failure"

      - name: (debug) success()
        if: success()
        run: echo "running success"

  after:
    needs: [deploy-production, deploy-sandbox]
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: success
        if: ${{ !contains(join(needs.*.result, ','), 'failure') }}
        run: echo "success"

      - name: failure
        if: ${{ contains(join(needs.*.result, ','), 'failure') }}
        run: echo "failure"

      - name: cancelled
        if: ${{ cancelled() }}
        run: echo "cancelled"

      - name: conditional failure or success
        run: echo "text that is conditional ${{ contains(join(needs.*.result, ','), 'failure') && 'failure' || 'success' }}"

  success:
    needs: [deploy-production, deploy-sandbox]
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }}
    runs-on: ubuntu-latest
    steps:
      - name: success
        if: success()
        run: echo "success"

      - name: failure
        if: failure()
        run: echo "failure"

  failure:
    needs: [deploy-production, deploy-sandbox]
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    runs-on: ubuntu-latest
    steps:
      - name: success
        if: success()
        run: echo "success"

      - name: failure
        if: failure()
        run: echo "failure"
