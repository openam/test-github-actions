name: Beta Environment

on:
  pull_request:
    types:
      - closed
  pull_request_review:
    types:
      - submitted

jobs:  
  beta-environment-skipped:
    if: |
      ${{ !contains(github.event.pull_request.labels.*.name, 'beta-environment') }} ||
      github.event.review.state != 'approved' ||
      github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - if: github.event.pull_request.draft == false
        run: echo "Needs to be a Draft PR to build to beta-environment"
      - if: "!contains(github.event.pull_request.labels.*.name, 'beta-environment')"
        run: echo "Need to have 'beta-environment' label to build to beta-environment"
      - if: github.event.review.state != 'approved'
        run: echo "Need to have an 'approved' pr to build out"
      - run: echo "${{ toJson(github) }}"
      - name: show env variables
        run: env
      - name: get PR from GITHUB_REF
        run: |
          PR=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo pr is $PR
          echo betaEnvironment beta$PR without braces
          echo betaEnvironment beta${PR} with braces
      - name: use PR variable from previous step
        run: |
          echo pr is $PR
          echo betaEnvironment beta$PR without braces
          echo betaEnvironment beta${PR} with braces
      - name: test multi-line command (single line)
        run: echo PR number${PR} has been started
      - name: test multi-line command (one multi line)
        run: |
          PR=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo PR number${PR} has been started
      - name: test multi-line command (multi line)
        run: |
          PR=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }') \
            && echo PR number${PR} has been started \
            && echo PR number${PR} 2nd line \
            && echo PR number${PR} 3rd line
      - name: test multi-line command (multi line without &&)
        run: |
          PR=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo PR number${PR} has been started
          echo PR number${PR} 3rd line
          echo PR number${PR} 2nd line
      - name: ls -al before cd
        run: |
          ls -al
      - name: test multi-line cd
        run: |
          cd a/b
          ls -al
          cat text.txt
      - name: ls -al following cd step
        run: |
          ls -al

  beta-environment-destroy:
    runs-on: ubuntu-latest
    steps:
      - name: show env variables
        run: env
      - name: get PR from GITHUB_REF
        run: |
          PR=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo pr is $PR
          echo betaEnvironment beta$PR without braces
          echo betaEnvironment beta${PR} with braces
      - name: use PR variable from previous step
        run: |
          echo pr is $PR
          echo betaEnvironment beta$PR without braces
          echo betaEnvironment beta${PR} with braces
      - if: github.event.pull_request.state == 'closed'
        run: echo "Need to destroy the beta-environment"
      # this job will only run if the PR has been merged
      - if: github.event.pull_request.merged == true
        run: |
          echo PR #${{ github.event.number }} has been merged
      # this job will only run if the PR has been closed without being merged
      - if: github.event.pull_request.merged == false
        run: |
          echo PR #${{ github.event.number }} has been closed without being merged
      - run: echo "${{ toJson(github) }}"

  beta-environment-build:
    if: |
      contains(github.event.pull_request.labels.*.name, 'beta-environment') &&
      github.event.review.state == 'approved' &&
      github.event.pull_request.draft == true
    runs-on: ubuntu-latest
    steps:
      - name: show env variables
        run: env
      - name: get PR from GITHUB_REF
        run: |
          PR=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          echo pr is $PR
          echo betaEnvironment beta$PR without braces
          echo betaEnvironment beta${PR} with braces
      - name: use PR variable from previous step
        run: |
          echo pr is $PR
          echo betaEnvironment beta$PR without braces
          echo betaEnvironment beta${PR} with braces
      - run: echo "This DRAFT PR was approved and has beta-environment label"
      - run: echo "${{ toJson(github) }}"
